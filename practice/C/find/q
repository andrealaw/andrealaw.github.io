DRAND48(3)                          Linux Programmer's Manual                          DRAND48(3)



NNAAMMEE
       drand48,  erand48, lrand48, nrand48, mrand48, jrand48, srand48, seed48, lcong48 - generate
       uniformly distributed pseudo-random numbers

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ssttddlliibb..hh>>

       ddoouubbllee ddrraanndd4488((vvooiidd));;

       ddoouubbllee eerraanndd4488((uunnssiiggnneedd sshhoorrtt _x_s_u_b_i[[33]]));;

       lloonngg iinntt llrraanndd4488((vvooiidd));;

       lloonngg iinntt nnrraanndd4488((uunnssiiggnneedd sshhoorrtt _x_s_u_b_i[[33]]));;

       lloonngg iinntt mmrraanndd4488((vvooiidd));;

       lloonngg iinntt jjrraanndd4488((uunnssiiggnneedd sshhoorrtt _x_s_u_b_i[[33]]));;

       vvooiidd ssrraanndd4488((lloonngg iinntt _s_e_e_d_v_a_l));;

       uunnssiiggnneedd sshhoorrtt **sseeeedd4488((uunnssiiggnneedd sshhoorrtt _s_e_e_d_1_6_v[[33]]));;

       vvooiidd llccoonngg4488((uunnssiiggnneedd sshhoorrtt _p_a_r_a_m[[77]]));;

   Feature Test Macro Requirements for glibc (see ffeeaattuurree__tteesstt__mmaaccrrooss(7)):

       All functions shown above: _SVID_SOURCE || _XOPEN_SOURCE

DDEESSCCRRIIPPTTIIOONN
       These functions generate pseudo-random numbers using the linear congruential algorithm and
       48-bit integer arithmetic.

       The  ddrraanndd4488()  and eerraanndd4488() functions return nonnegative double-precision floating-point
       values uniformly distributed between [0.0, 1.0).

       The llrraanndd4488() and nnrraanndd4488() functions return nonnegative long integers uniformly  distrib‐
       uted between 0 and 2^31.

       The  mmrraanndd4488()  and  jjrraanndd4488() functions return signed long integers uniformly distributed
       between -2^31 and 2^31.

       The ssrraanndd4488(), sseeeedd4488() and llccoonngg4488() functions are initialization functions, one of which
       should be called before using ddrraanndd4488(), llrraanndd4488() or mmrraanndd4488().  The functions eerraanndd4488(),
       nnrraanndd4488() and jjrraanndd4488() do not require an initialization function to be called first.

       All the functions work by generating a sequence of 48-bit integers, _X_i, according  to  the
       linear congruential formula:

              XXnn++11 == ((aaXXnn ++ cc)) mmoodd mm,, wwhheerree nn >>== 00

       The parameter _m = 2^48, hence 48-bit integer arithmetic is performed.  Unless llccoonngg4488() is
       called, _a and _c are given by:

              aa == 00xx55DDEEEECCEE6666DD
              cc == 00xxBB

       The value returned by any of the functions  ddrraanndd4488(),  eerraanndd4488(),  llrraanndd4488(),  nnrraanndd4488(),
       mmrraanndd4488() or jjrraanndd4488() is computed by first generating the next 48-bit _X_i in the sequence.
       Then the appropriate number of bits, according to the type of data item to be returned, is
       copied from the high-order bits of _X_i and transformed into the returned value.

       The  functions ddrraanndd4488(), llrraanndd4488() and mmrraanndd4488() store the last 48-bit _X_i generated in an
       internal buffer.  The functions eerraanndd4488(), nnrraanndd4488() and  jjrraanndd4488()  require  the  calling
       program  to provide storage for the successive _X_i values in the array argument _x_s_u_b_i.  The
       functions are initialized by placing the initial value of _X_i into the array before calling
       the function for the first time.

       The initializer function ssrraanndd4488() sets the high order 32-bits of _X_i to the argument _s_e_e_d_‐
       _v_a_l.  The low order 16-bits are set to the arbitrary value 0x330E.

       The initializer function sseeeedd4488() sets the value of _X_i to the 48-bit  value  specified  in
       the  array  argument  _s_e_e_d_1_6_v.  The previous value of _X_i is copied into an internal buffer
       and a pointer to this buffer is returned by sseeeedd4488().

       The initialization function llccoonngg4488() allows the user to specify initial values for _X_i,  _a
       and  _c.  Array argument elements _p_a_r_a_m_[_0_-_2_] specify _X_i, _p_a_r_a_m_[_3_-_5_] specify _a, and _p_a_r_a_m_[_6_]
       specifies _c.  After llccoonngg4488() has been called, a subsequent call to  either  ssrraanndd4488()  or
       sseeeedd4488() will restore the standard values of _a and _c.

AATTTTRRIIBBUUTTEESS
   MMuullttiitthhrreeaaddiinngg ((sseeee pptthhrreeaaddss((77))))
       The ddrraanndd4488(), eerraanndd4488(), llrraanndd4488(), nnrraanndd4488(), mmrraanndd4488(), jjrraanndd4488(), ssrraanndd4488(), sseeeedd4488(),
       and llccoonngg4488() functions record global state information for the random  number  generator,
       so they are not thread-safe.

CCOONNFFOORRMMIINNGG TTOO
       SVr4, POSIX.1-2001.

NNOOTTEESS
       These  functions are declared obsolete by SVID 3, which states that rraanndd(3) should be used
       instead.

SSEEEE AALLSSOO
       rraanndd(3), rraannddoomm(3)

CCOOLLOOPPHHOONN
       This page is part of release 3.54 of the Linux _m_a_n_-_p_a_g_e_s project.  A  description  of  the
       project,     and    information    about    reporting    bugs,    can    be    found    at
       http://www.kernel.org/doc/man-pages/.



                                            2013-06-21                                 DRAND48(3)
